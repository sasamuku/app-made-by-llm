// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

model User {
  id            String    @id
  email         String    @unique
  name          String?
  avatarUrl     String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tasks         Task[]
  projects      Project[]
  teamMembers   TeamMember[]
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    Int
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  projectId   Int?
  project     Project?  @relation(fields: [projectId], references: [id])
  tags        TaskTag[]
}

model Project {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  tasks       Task[]
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  teamMembers TeamMember[]
}

model Team {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  members     TeamMember[]
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  role      String   @default("member") // "owner", "admin", "member"
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  teamId    Int
  team      Team     @relation(fields: [teamId], references: [id])
  projectId Int?
  project   Project? @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, teamId])
  @@unique([userId, projectId])
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  color     String    @default("#3498db")
  tasks     TaskTag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model TaskTag {
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  tagId     Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  createdAt DateTime @default(now())

  @@id([taskId, tagId])
}
